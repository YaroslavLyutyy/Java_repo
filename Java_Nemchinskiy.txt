История программирования:

Парадигма - способ смотреть на что-то

1) Алгоритм
2) Процедурная парадигма
3) Объектно-ориентировання парадигма (объект - данные и методы которые их обрабатывают)
4) Другия парадигмы

ООП - парадигма программирования, в которой основными концециями являються понятия объектов и классов.
Принципы ООП : 
1) Инкапсуляция - когда мы не даём другим объектам изменять внутреннее состояние объекта, внутреннее состояние объекта может изметься лишь им самим,
2) Наследование - механизм языка, позволяющий описать новый класс на основе уже существующего (родительского, базового) класса.
                  Класс потомок может добавить собственные методы и свойства, а также может пользоваться родительскими методами и свойствами. 
                  Позволяет строить иерархии классов.
3) Полиморфизм - способность обращаться с разными подклассами одного класса как будто они все одинакового базового класса 

Абстракность
Сигнатура метода - описание метода: тип фозращаемого значения, квалификаторы доступа, название метода, принимаемые значения с их типами и бросаемый exception,
Абстрактные классы (Животное)
Абстрактные методы (Дышит)
Переопределение
Инстанциация a = new A
  
  
Классы и объекты
Классы
Объекты
Интерфейсы - полностью абстрактный класс


Основы Java JVM:

APP         JAPP

ОС          JVM

Driver      ОС 
            
Hardware    Driver

            Hardware
			
			
			
Garbage collector (GC) (Heap - куча в которую сбрасывается мусор)	

Штатный режим (Heap) - при выходе объёкта из области видимости или потери последней ссылки	на объёкт
Stand by режим - когда заканчиввается место в Heap - java останавливается проверяет всё дерево, выстраивает и удаляет всё что не используется

Варианты поставки Java

J2ME (micro edition)
J2SE (standart edition)
J2EE (enterprise edition)

JVM и JDK


UML (Unified Modeling Language) 

Типы UML диаграмм:
Структурная диаграмма
1) класс (квадрат) - название класса, поля класса, методы класса (уровни доступа "-" - приватный, "+" - публичный)
2) интерфейс (кружок) - название, методы
3) взаимодействие 
  A----B просто прямая (двунаправленое), 
  A--->B стрелка (унинаправленная) указывает зависимость, (А вызывает B)
  A<>--B аггрегация, (A содержит B)
  A<>--B (ромб закрашен) композиция, (A состоит из списка B)
  A <|--- B генерализация/наследование
